/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controller.Controller;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Noon
 * @Write Program by Nan and Andre
 * 
 * Create Directory
 * ==================
 * This function allow user to create new directory into the current database.
 * This function checking 
 *  -Make sure user fill up all necessary information before process to 
 *  execute script. If information is not enough to execute script show 
 *  dialog box to user interface let user to fill up necessary information.
 * Allow user to see script by pressing “Show Script” and also let user to 
 * change script by click on “Edit Script”.
 * At the same time, allow user to save current script into drive/temp drive. 
 * So that user can take that script to anywhere.
 * 
 * How Function work
 * =================
 * When Frame open, load all data from Database.
 * 
 * When user click on "Show Script" set the choose=2 and call actions() to
 * connect Controller's functions to execute statement.
 * 
 * When user click on "Edit Script" text area will enabled and allow user to
 * change current script. Than set choice=3 and call actions() to connect
 * Controller's functions to execute statement.
 * 
 * When user click on "Save Script", system show dialog box and allow user to
 * choose file to save script. And get directory from user choose one and set
 * into writeScrpitForSave(directory,script) to write the script into the file.
 * 
 * When user click on "OK", system start to run script. If script no error proceed
 * and if script is error show error message on user interface.
 * 
 * When user click "Cancel", system clean the GUI.
 * 
 */
public class CreateDir extends javax.swing.JPanel {

    /**
     * Creates new form CreateDir
     */
    public CreateDir() {
        initComponents();
        scriptText.setDisabledTextColor(Color.BLACK);
    }

    public Controller thisController = new Controller();
    public int choice;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        path = new javax.swing.JTextField();
        browseFile = new javax.swing.JButton();
        showScript = new javax.swing.JButton();
        editScript = new javax.swing.JButton();
        saveScript = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        scriptText = new javax.swing.JTextArea();
        cancel = new javax.swing.JButton();
        ok = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dirName = new javax.swing.JTextField();

        jLabel2.setText("Directory:");

        browseFile.setText("Browse");
        browseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileActionPerformed(evt);
            }
        });
        browseFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                browseFileKeyPressed(evt);
            }
        });

        showScript.setText("Show Script");
        showScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showScriptActionPerformed(evt);
            }
        });
        showScript.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                showScriptKeyPressed(evt);
            }
        });

        editScript.setText("Edit Script");
        editScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editScriptActionPerformed(evt);
            }
        });
        editScript.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                editScriptKeyPressed(evt);
            }
        });

        saveScript.setText("Save Script");
        saveScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveScriptActionPerformed(evt);
            }
        });
        saveScript.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                saveScriptKeyPressed(evt);
            }
        });

        scriptText.setColumns(20);
        scriptText.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        scriptText.setRows(5);
        scriptText.setWrapStyleWord(true);
        scriptText.setEnabled(false);
        jScrollPane1.setViewportView(scriptText);

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelKeyPressed(evt);
            }
        });

        ok.setText("Create");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        ok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                okKeyPressed(evt);
            }
        });

        jLabel3.setText("Directory Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showScript, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editScript, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveScript, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dirName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                    .addComponent(path, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addComponent(browseFile))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancel)
                        .addGap(32, 32, 32)
                        .addComponent(ok)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dirName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseFile)
                    .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(showScript)
                        .addGap(18, 18, 18)
                        .addComponent(editScript)
                        .addGap(22, 22, 22)
                        .addComponent(saveScript))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ok)
                    .addComponent(cancel))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFileActionPerformed

        //User Click on Browse File
        int val = 0;

        //Browse file from drive
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        try {
            val = fileChooser.showOpenDialog(null);
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Error opening the file dialogue",
                null, JOptionPane.ERROR_MESSAGE);
        }

        if (val == JFileChooser.APPROVE_OPTION) {
            //set directory that user choosed
            path.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_browseFileActionPerformed

    private void browseFileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_browseFileKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            browseFile.doClick();
        }
    }//GEN-LAST:event_browseFileKeyPressed

    private void showScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showScriptActionPerformed
        saveScript.setEnabled(true);
        choice = 2;
        actions();
    }//GEN-LAST:event_showScriptActionPerformed

    private void showScriptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_showScriptKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            showScript.doClick();
        }
    }//GEN-LAST:event_showScriptKeyPressed

    private void editScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editScriptActionPerformed
        choice = 3;//set choice that user clicked on edit script
        dirName.setEnabled(false);
        path.setEnabled(false);
        scriptText.setEnabled(true);
        saveScript.setEnabled(true);
    }//GEN-LAST:event_editScriptActionPerformed

    private void editScriptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editScriptKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            editScript.doClick();
        }
    }//GEN-LAST:event_editScriptKeyPressed

    private void saveScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveScriptActionPerformed
        //user clicked on save script
        int val = 0;

        //set button name for fileChooser
        UIManager.put("FileChooser.openDialogTitleText", "Load Script File");
        UIManager.put("FileChooser.openButtonText", "Save Script");

        //Browse file from drive
        JFileChooser fileChooser = new JFileChooser();

        try {
            val = fileChooser.showOpenDialog(null);
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Error opening the file dialogue",
                null, JOptionPane.ERROR_MESSAGE);
        }

        //if file is approve to open start to save the script to that file
        if (val == JFileChooser.APPROVE_OPTION) {
            String saveScriptPath = fileChooser.getSelectedFile().getAbsolutePath();
            if(saveScriptPath.endsWith(".sql")){
                thisController.writeScrpitForSave(saveScriptPath,scriptText.getText());
            }else{
                saveScriptPath = saveScriptPath+".sql";
                thisController.writeScrpitForSave(saveScriptPath,scriptText.getText());
            }
            JOptionPane.showMessageDialog(null, "Script is Saved.");
        }
    }//GEN-LAST:event_saveScriptActionPerformed

    private void saveScriptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saveScriptKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            saveScript.doClick();
        }
    }//GEN-LAST:event_saveScriptKeyPressed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        clean();
    }//GEN-LAST:event_cancelActionPerformed

    private void cancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            cancel.doClick();
        }
    }//GEN-LAST:event_cancelKeyPressed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        if(dirName.getText().length()!=0 && path.getText().length()!=0){//checking for null
            int reply = JOptionPane.showConfirmDialog(null, "Are you sure you "
                    + "would like to Create "
                + dirName.getText(),
                "Click Yes or No", JOptionPane.YES_NO_OPTION);
            if(reply == JOptionPane.YES_OPTION){
                    if(choice == 3){//user cliked on edit script
                        //set Script that user edited
                        thisController.script = scriptText.getText();
                        //run script
                        Boolean check = thisController.connectiontoDB("script");
                        
                        if(check == true){//script is run successful
                            thisController.history(scriptText.getText());
                            JOptionPane.showMessageDialog(this, "New Directory is created.");
                            clean();
                        }else{//run script fail
                            JOptionPane.showMessageDialog(this, thisController.errorMsg,
                                "Error",JOptionPane.ERROR_MESSAGE);
                            scriptText.setEnabled(true);
                            editScript.setEnabled(true);
                            cancel.setEnabled(true);
                            ok.setEnabled(true);
                        }
                    }else {
                        choice = 1;//user didn't click on edit script
                        actions();
                    }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please fill up all information");
        }
    }//GEN-LAST:event_okActionPerformed

    private void okKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_okKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ok.doClick();
        }
    }//GEN-LAST:event_okKeyPressed

    private void actions(){
        if(choice == 1){//start create new directory
            Boolean check = thisController.connectiontoDB("createDir");
            if(check == true){//if true directory is created
                thisController.history(thisController.createDir());
                JOptionPane.showMessageDialog(this, "New Directory is created."); 
                clean();//clean the GUI form
            }else{//if false tablespace creation fail and show error msg to user
                JOptionPane.showMessageDialog(this, thisController.errorMsg,
                  "Error",JOptionPane.ERROR_MESSAGE);
                scriptText.setEnabled(false);
                scriptText.setText("");
            }
        }else if (choice == 2){//show script to scriptText file in GUI
              scriptText.setText(thisController.createDir());
        }
    }
    
    private void clean(){
        dirName.setText("");
        dirName.setEnabled(true);
        path.setText("");
        path.setEnabled(true);
        scriptText.setText("");
        scriptText.setEnabled(false);
        showScript.setEnabled(true);
        editScript.setEnabled(true);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseFile;
    private javax.swing.JButton cancel;
    public static javax.swing.JTextField dirName;
    private javax.swing.JButton editScript;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ok;
    public static javax.swing.JTextField path;
    private javax.swing.JButton saveScript;
    public static javax.swing.JTextArea scriptText;
    private javax.swing.JButton showScript;
    // End of variables declaration//GEN-END:variables
}
