/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controller.*;
import java.awt.Image;
import java.util.ArrayList;
import java.sql.PreparedStatement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.sql.SQLException;
import static Controller.Controller.connection;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
/**
 *
 * @author Shan
 */
public class DeleteIndex extends javax.swing.JPanel {

    /**
     * Creates new form DeleteIndex
     */
    public DeleteIndex() {
        initComponents();
        scriptText.setEnabled(false);
        AutoCompleteDecorator.decorate(indTabName);
        AutoCompleteDecorator.decorate(indexName);
        
        scriptText.setDisabledTextColor(Color.BLACK);

    }
    public Controller thisController = new Controller();
    int choice=0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        indTabName = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        indexName = new javax.swing.JComboBox();
        ok_DeleteIndex = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        scriptText = new javax.swing.JTextArea();
        editScript = new javax.swing.JButton();
        showScript = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        saveScript = new javax.swing.JButton();

        setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel2.setText("Table Name:");

        indTabName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Please Select One--" }));
        indTabName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indTabNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Index Name:");

        indexName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Please Select One--" }));

        ok_DeleteIndex.setText("Delete");
        ok_DeleteIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok_DeleteIndexActionPerformed(evt);
            }
        });
        ok_DeleteIndex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ok_DeleteIndexKeyPressed(evt);
            }
        });

        refresh.setIcon(refreshIcon(15));
        refresh.setToolTipText("");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        refresh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                refreshKeyPressed(evt);
            }
        });

        scriptText.setColumns(20);
        scriptText.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        scriptText.setRows(5);
        jScrollPane1.setViewportView(scriptText);

        editScript.setText("Edit Script");
        editScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editScriptActionPerformed(evt);
            }
        });
        editScript.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                editScriptKeyPressed(evt);
            }
        });

        showScript.setText("Show Script");
        showScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showScriptActionPerformed(evt);
            }
        });
        showScript.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                showScriptKeyPressed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelKeyPressed(evt);
            }
        });

        saveScript.setText("Save Script");
        saveScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveScriptActionPerformed(evt);
            }
        });
        saveScript.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                saveScriptKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ok_DeleteIndex))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(editScript, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(showScript, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                .addComponent(saveScript, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(indexName, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(indTabName, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(indTabName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(indexName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(showScript)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editScript)
                        .addGap(18, 18, 18)
                        .addComponent(saveScript))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancel)
                            .addComponent(ok_DeleteIndex))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void indTabNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indTabNameActionPerformed
        if(indTabName.getSelectedIndex()==0){
            indexName.setEnabled(false);
        }else{
            indexName.setEnabled(true);
            retriveIndexFromDB();

        }
    }//GEN-LAST:event_indTabNameActionPerformed

    private void ok_DeleteIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ok_DeleteIndexActionPerformed
          
        if (choice==2){
            int reply = JOptionPane.showConfirmDialog(null, "Are you sure you would like to delete this  "
                ,"Click Yes or No", JOptionPane.YES_NO_OPTION);
 
                 if(reply == JOptionPane.YES_OPTION){
            
                thisController.connectiontoDB("openConn"); 
                boolean success;
                try {
                    success=true;  
                   String script = scriptText.getText();
                    PreparedStatement st = connection.prepareStatement(script);
                   st.executeUpdate();
                   thisController.history(script);
                }catch (SQLException ex)
                {
                    success=false;
                    JOptionPane.showMessageDialog(this,ex.getMessage());
               }
               if(success==true){
                   JOptionPane.showMessageDialog(this, "Index Dropped ");
                   retriveIndexFromDB();
                   checkList();
                   scriptText.setText("");
                   indTabName.setEnabled(true);
                    indexName.setEnabled(true);
               }
              }
        }else if(choice!=2){
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you would like to delete this  "
                +(String) indexName.getSelectedItem(),
                "Click Yes or No", JOptionPane.YES_NO_OPTION);
 
        if(reply == JOptionPane.YES_OPTION){
                Boolean check = thisController.connectiontoDB("dropIndex");
                 if(check == true){
                     
                        JOptionPane.showMessageDialog(this, "Index Dropped");
                        thisController.history(thisController.dropIndex());
                        indexName.removeItem(indexName.getSelectedItem());
                        /*add this function because when the index name list was empty
                        * the last index name still remain in the selected option 
                        * and i want to clear it.*/
                        checkList();
                        scriptText.setText("");
                 }else{
                        JOptionPane.showMessageDialog(this, thisController.errorMsg,
                    "Error",JOptionPane.ERROR_MESSAGE);
                 }
        }
       }
    }//GEN-LAST:event_ok_DeleteIndexActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        retriveTableFromDB();
        retriveIndexFromDB();
        scriptText.setText("");
    }//GEN-LAST:event_refreshActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        retriveTableFromDB();
        retriveIndexFromDB();
    }//GEN-LAST:event_formAncestorAdded

    private void refreshKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_refreshKeyPressed
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            refresh.doClick();
        }
    }//GEN-LAST:event_refreshKeyPressed

    private void ok_DeleteIndexKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ok_DeleteIndexKeyPressed
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ok_DeleteIndex.doClick();
        }
    }//GEN-LAST:event_ok_DeleteIndexKeyPressed

    private void editScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editScriptActionPerformed
        scriptText.setEnabled(true);
        choice = 2;
       indTabName.setEnabled(false);
       indexName.setEnabled(false);
    }//GEN-LAST:event_editScriptActionPerformed

    private void showScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showScriptActionPerformed
    if(indexName.getSelectedIndex()!=0 && indTabName.getSelectedIndex()!=0){
        scriptText.setText(thisController.dropIndex());
        }else{
        scriptText.setText("");
        JOptionPane.showMessageDialog(this, "Please select information.");
        }
    }//GEN-LAST:event_showScriptActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        scriptText.setEnabled(false);
        choice = 0;
        indTabName.setEnabled(true);
        indexName.setEnabled(true);
        indTabName.setSelectedIndex(0);
        indexName.setSelectedIndex(0);
        scriptText.setText("");
    }//GEN-LAST:event_cancelActionPerformed

    private void saveScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveScriptActionPerformed

        int val = 0;

        //set button name for fileChooser
        UIManager.put("FileChooser.openDialogTitleText", "Load Script File");
        UIManager.put("FileChooser.openButtonText", "Save Script");

        //Browse file from drive
        JFileChooser fileChooser = new JFileChooser();

        try {
            val = fileChooser.showOpenDialog(null);
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Error opening the file dialogue",
                null, JOptionPane.ERROR_MESSAGE);
        }

        //if file is approve to open start to save the script to that file
        if (val == JFileChooser.APPROVE_OPTION) {
            String saveScriptPath = fileChooser.getSelectedFile().getAbsolutePath();
            if(saveScriptPath.endsWith(".sql")){
                thisController.writeScrpitForSave(saveScriptPath,scriptText.getText());
            }else{
                saveScriptPath = saveScriptPath+".sql";
                thisController.writeScrpitForSave(saveScriptPath,scriptText.getText());
            }
            JOptionPane.showMessageDialog(null, "Script is Saved.");
        }
    }//GEN-LAST:event_saveScriptActionPerformed

    private void saveScriptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saveScriptKeyPressed
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            saveScript.doClick();
        }
    }//GEN-LAST:event_saveScriptKeyPressed

    private void showScriptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_showScriptKeyPressed
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            showScript.doClick();
        }
    }//GEN-LAST:event_showScriptKeyPressed

    private void editScriptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editScriptKeyPressed
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            editScript.doClick();
        }
    }//GEN-LAST:event_editScriptKeyPressed

    private void cancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelKeyPressed
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            cancel.doClick();
        }
    }//GEN-LAST:event_cancelKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JButton editScript;
    public static javax.swing.JComboBox indTabName;
    public static javax.swing.JComboBox indexName;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ok_DeleteIndex;
    private javax.swing.JButton refresh;
    private javax.swing.JButton saveScript;
    private javax.swing.JTextArea scriptText;
    private javax.swing.JButton showScript;
    // End of variables declaration//GEN-END:variables

    public void retriveTableFromDB(){

        thisController.connectiontoDB("getTabName");
        
        ArrayList<String> arrList = new ArrayList<String>();
        arrList.addAll(thisController.arrList);
        
        indTabName.removeAllItems();
        indTabName.addItem("--Please Select One--");
                for(int i = 0; i<arrList.size();i++){
                    if(arrList.get(i).toUpperCase().equals("HISTORY")){}else{
                    indTabName.addItem(arrList.get(i));
                    }
                }
    }
    
    public void retriveIndexFromDB(){
        thisController.connectiontoDB("getIndexName");
        
        ArrayList<String> arrList = new ArrayList<String>();
        arrList.addAll(thisController.arrList);
        
        indexName.removeAllItems();
        indexName.addItem("--Please Select One--");
            for(int i=0;i<arrList.size();i++){
                indexName.addItem(arrList.get(i));
                }
    }
    
    public void checkList(){
        thisController.connectiontoDB("getIndexName");
        
        ArrayList<String> arrList = new ArrayList<String>();
        arrList.addAll(thisController.arrList);  
        if (arrList.size()==0){
         //indexName.addItem("--Please Select One");
        }
    }
    public ImageIcon refreshIcon(int size) {
        ImageIcon icon = new ImageIcon(getClass().getResource("/Resources/Refresh.png"));
        Image img = icon.getImage() ;  
        Image newimg = img.getScaledInstance( size, size,  java.awt.Image.SCALE_SMOOTH ) ;  
        icon = new ImageIcon( newimg );
   
        return icon;    
    }
}