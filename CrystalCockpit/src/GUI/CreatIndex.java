/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controller.*;
import static Controller.Controller.connection;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
/**
 *
 * @author Shan
 */
public class CreatIndex extends javax.swing.JPanel {
    private int choice;

    /**
     * Creates new form CreateIndex
     */
    public CreatIndex() {
        initComponents();
        show_addedColumnBox.setVisible(false);
        scriptText.setEnabled(false);
        show_columnName.removeAllItems(); 
        show_columnName.setEnabled(false);
        EditModeLabel.setVisible(false);
        addColumn.setVisible(false);
        AutoCompleteDecorator.decorate(list_table_name); 
        saveScript.setEnabled(false);
        
        scriptText.setDisabledTextColor(Color.BLACK);
        show_addedColumnBox.setDisabledTextColor(Color.BLACK);
    }
    
    public Controller thisController = new Controller();
    boolean checkEdit=false;
    boolean checkEmpty=false;
    ArrayList<String> columnNames = new ArrayList<String>();
    String script = null;
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createIndex = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        indexName = new javax.swing.JTextField();
        checkUnique = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        list_table_name = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        scriptText = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        show_columnName = new javax.swing.JComboBox();
        checkMultipleColumns = new javax.swing.JCheckBox();
        show_script = new javax.swing.JButton();
        edit_Script = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        EditModeLabel = new javax.swing.JLabel();
        addColumn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        show_addedColumnBox = new javax.swing.JTextArea();
        cancelbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        saveScript = new javax.swing.JButton();

        setFocusCycleRoot(true);
        setPreferredSize(new java.awt.Dimension(600, 500));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        createIndex.setText("Create");
        createIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createIndexActionPerformed(evt);
            }
        });
        createIndex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                createIndexKeyPressed(evt);
            }
        });

        jLabel2.setText("Index Name:  ");

        checkUnique.setText("Unique");
        checkUnique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkUniqueActionPerformed(evt);
            }
        });

        jLabel3.setText("Table Name:  ");

        list_table_name.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Please Select One--" }));
        list_table_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_table_nameActionPerformed(evt);
            }
        });

        scriptText.setColumns(20);
        scriptText.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        scriptText.setRows(5);
        jScrollPane1.setViewportView(scriptText);

        jLabel4.setText("Columns:");

        show_columnName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Please select at least one column--", "Add more columns" }));

        checkMultipleColumns.setText("Multiple Columns");
        checkMultipleColumns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMultipleColumnsActionPerformed(evt);
            }
        });

        show_script.setText("Show Script");
        show_script.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_scriptActionPerformed(evt);
            }
        });
        show_script.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                show_scriptKeyPressed(evt);
            }
        });

        edit_Script.setText("Edit Script");
        edit_Script.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_ScriptActionPerformed(evt);
            }
        });
        edit_Script.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edit_ScriptKeyPressed(evt);
            }
        });

        refresh.setIcon(thisController.refreshIcon(15));
        refresh.setMaximumSize(new java.awt.Dimension(15, 15));
        refresh.setMinimumSize(new java.awt.Dimension(15, 15));
        refresh.setPreferredSize(new java.awt.Dimension(15, 15));
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        refresh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                refreshKeyPressed(evt);
            }
        });

        EditModeLabel.setText("~~User in Edit Mode~~");

        addColumn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addColumn.setText("+");
        addColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addColumnActionPerformed(evt);
            }
        });
        addColumn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addColumnKeyPressed(evt);
            }
        });

        show_addedColumnBox.setEditable(false);
        show_addedColumnBox.setColumns(20);
        show_addedColumnBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        show_addedColumnBox.setRows(5);
        jScrollPane2.setViewportView(show_addedColumnBox);

        cancelbtn.setText("Cancel");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });
        cancelbtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelbtnKeyPressed(evt);
            }
        });

        jLabel5.setText("*To remove column,select Edit Script");

        jLabel6.setText("Added columns");

        saveScript.setText("Save Script");
        saveScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveScriptActionPerformed(evt);
            }
        });
        saveScript.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                saveScriptKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(104, 104, 104)
                            .addComponent(EditModeLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancelbtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(createIndex))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3))
                                    .addGap(34, 34, 34)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(indexName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(40, 40, 40)
                                            .addComponent(checkUnique))
                                        .addComponent(list_table_name, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(show_columnName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(17, 17, 17)
                                            .addComponent(checkMultipleColumns))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(addColumn))))
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(13, 13, 13)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(show_script, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .addComponent(edit_Script, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveScript, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(50, 50, 50))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(indexName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkUnique)
                    .addComponent(checkMultipleColumns))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(list_table_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addColumn)
                        .addComponent(jLabel6))
                    .addComponent(refresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(show_columnName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EditModeLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(createIndex)
                                .addComponent(cancelbtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(show_script)
                        .addGap(11, 11, 11)
                        .addComponent(edit_Script)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveScript)))
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkUniqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkUniqueActionPerformed
      if(checkUnique.isSelected()){
          choice=2;  
      }else if(!checkUnique.isSelected()){
          choice=0;
      }
    }//GEN-LAST:event_checkUniqueActionPerformed

    private void checkMultipleColumnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMultipleColumnsActionPerformed
        if(checkMultipleColumns.isSelected()){//when user select multi
            checkEdit=true;
            addColumn.setVisible(true);
            show_addedColumnBox.setVisible(true);
        }else if(!checkMultipleColumns.isSelected()){//if user didn't select multi
           checkEdit=false;
            addColumn.setVisible(false);
            show_addedColumnBox.setVisible(false); 
        }
            
    }//GEN-LAST:event_checkMultipleColumnsActionPerformed

    private void createIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createIndexActionPerformed
       int reply = JOptionPane.showConfirmDialog(null, "Are you sure you would like to create this  "
                +(String) indexName.getText(),
                "Click Yes or No", JOptionPane.YES_NO_OPTION);
 
        if(reply == JOptionPane.YES_OPTION){
            
      //check add more column?
       if(checkEdit==true){//user click on edit script
            thisController.connectiontoDB("openConn");
                         
              boolean success;

                try {
                    success=true;  
                   String script =  scriptText.getText();
                    PreparedStatement st = connection.prepareStatement(script);
                   st.executeUpdate();
                   thisController.history(script);
                }catch (SQLException ex)
                {
                    success=false;
                    JOptionPane.showMessageDialog(this,ex.getMessage());
               }
               if(success==true){
                     indexName.setText("");
                   columnNames.clear();
                     show_addedColumnBox.setText("");
                   JOptionPane.showMessageDialog(this, "New Index Created ");
                   cancelbtn.doClick();
                 
               }
                 
         }else
            
            if(indexName.getText()!=null 
                    && list_table_name.getSelectedIndex()!=0){//checking for null
             
                if(choice!=2){//User click on 'create' without clicking on Unique Index
                   Boolean check = thisController.connectiontoDB("CreateIndex");
                            if(check == true){
                      
                            JOptionPane.showMessageDialog(this, "New Index Created");
                            thisController.history(thisController.createIndex());
                              cancelbtn.doClick();
                            }else{
                             JOptionPane.showMessageDialog(this, thisController.errorMsg,
                          "Error",JOptionPane.ERROR_MESSAGE);
                            }
            }else if(choice==2){//User click on Unique to create index
                         Boolean check = thisController.connectiontoDB("CreateUniqueIndex");
                            if(check == true){
                            JOptionPane.showMessageDialog(this, "New Index Created");
                            thisController.history(thisController.createUniqueIndex());
                             cancelbtn.doClick();
                            }else{
                             JOptionPane.showMessageDialog(this, thisController.errorMsg,
                          "Error",JOptionPane.ERROR_MESSAGE);
                            }
            }
        }else{
                JOptionPane.showMessageDialog(this, "Please fill up correct information.");
            }

      }
    }//GEN-LAST:event_createIndexActionPerformed

    private void edit_ScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_ScriptActionPerformed
        EditModeLabel.setVisible(true);
        scriptText.setEnabled(true);
        checkEdit=true;
        indexName.setEnabled(false);
    }//GEN-LAST:event_edit_ScriptActionPerformed

    private void list_table_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_table_nameActionPerformed
        if(list_table_name.getSelectedIndex()!=0){
            show_columnName.setEnabled(true);
            retriveColumnFromDB();
        }else{
            show_columnName.setEnabled(false);
        }
    }//GEN-LAST:event_list_table_nameActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
      if(checkEmpty==true){
        refresh.setEnabled(false);
        JOptionPane.showMessageDialog(this,"No more columns!To remove columns please select edit script",
                          "Error",JOptionPane.ERROR_MESSAGE);
         }else if(checkEmpty==false){
       retriveColumnFromDB();

         }
    }//GEN-LAST:event_refreshActionPerformed

    private void addColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addColumnActionPerformed

    String curCol = null;
    curCol = (String) show_columnName.getSelectedItem();
    if(curCol!=null){
    show_addedColumnBox.append(((String) show_columnName.getSelectedItem())+ "\n");
    columnNames.add(curCol);
    }else 
    {
             JOptionPane.showMessageDialog(this,"No more columns!",
                          "Error",JOptionPane.ERROR_MESSAGE);
    }
    
      if(checkEdit==true && choice!=2){//user click on edit and didn't click on unique
          
                 String script="CREATE INDEX "+indexName.getText() +"\n"+" ON "
                    +list_table_name.getSelectedItem() + "( ";
                 for(int i=0; i<columnNames.size();i++)
                 {
                   
                     script = script.concat(  columnNames.get(i));
                     if(i!=columnNames.size()-1){
                               script = script.concat(" , ");
                     }

                 }
                 script = script.concat(") ");
                 //to prevent duplicate columns adding in.....
                 show_columnName.removeItem(show_columnName.getSelectedItem());  
                 scriptText.setText(script);
                 
                  //to check if the columns is empty
                 if(show_columnName.getSelectedItem()==null){
                 checkEmpty=true;
                }
      }else if(checkEdit==true && choice==2){//user click on edit and unique
          
                 String script="CREATE UNIQUE INDEX "+indexName.getText() +"\n"+" ON "
                    +list_table_name.getSelectedItem() + "( ";
                 for(int i=0; i<columnNames.size();i++)
                 {
      
                     script = script.concat(  columnNames.get(i));
                     if(i!=columnNames.size()-1){
                               script = script.concat(" , ");
                     }
                 }
                    script = script.concat(") ");
                 show_columnName.removeItem(show_columnName.getSelectedItem()); 
                 scriptText.setText(script);
      }
    }//GEN-LAST:event_addColumnActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
       retriveTableFromDB();
       retriveColumnFromDB();
       cancelbtn.doClick();
    }//GEN-LAST:event_formAncestorAdded

    private void refreshKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_refreshKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            refresh.doClick();
        }
    }//GEN-LAST:event_refreshKeyPressed

    private void addColumnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addColumnKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            addColumn.doClick();
        }
    }//GEN-LAST:event_addColumnKeyPressed

    private void show_scriptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_show_scriptKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            show_script.doClick();
        }
    }//GEN-LAST:event_show_scriptKeyPressed

    private void edit_ScriptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edit_ScriptKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            edit_Script.doClick();
        }
    }//GEN-LAST:event_edit_ScriptKeyPressed

    private void createIndexKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_createIndexKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            createIndex.doClick();
        }
    }//GEN-LAST:event_createIndexKeyPressed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        columnNames.clear();
        indexName.setText("");
        scriptText.setText("");
        show_addedColumnBox.setText("");
        checkUnique.setSelected(false);
         choice=0;
        checkMultipleColumns.setSelected(false);
         checkEdit=false;
        addColumn.setVisible(false);
        show_addedColumnBox.setVisible(false);
        retriveTableFromDB();
       show_columnName.removeAllItems();
       scriptText.setEnabled(false);
        EditModeLabel.setVisible(false);
       indexName.setEnabled(true);
       checkEmpty=false;
        refresh.setEnabled(true);
        show_columnName.removeAllItems();
        list_table_name.setSelectedIndex(0);
        show_script.setEnabled(true);
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void show_scriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_scriptActionPerformed

        saveScript.setEnabled(true);
        if( indexName.getText()!="" ){
            showScript();
        }
    }//GEN-LAST:event_show_scriptActionPerformed

    private void saveScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveScriptActionPerformed

        int val = 0;

        //set button name for fileChooser
        UIManager.put("FileChooser.openDialogTitleText", "Load Script File");
        UIManager.put("FileChooser.openButtonText", "Save Script");

        //Browse file from drive
        JFileChooser fileChooser = new JFileChooser();

        try {
            val = fileChooser.showOpenDialog(null);
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Error opening the file dialogue",
                null, JOptionPane.ERROR_MESSAGE);
        }

        //if file is approve to open start to save the script to that file
        if (val == JFileChooser.APPROVE_OPTION) {
            String saveScriptPath = fileChooser.getSelectedFile().getAbsolutePath();
            if(saveScriptPath.endsWith(".sql")){
                thisController.writeScrpitForSave(saveScriptPath,scriptText.getText());
            }else{
                saveScriptPath = saveScriptPath+".sql";
                thisController.writeScrpitForSave(saveScriptPath,scriptText.getText());
            }
            JOptionPane.showMessageDialog(null, "Script is Saved.");
        }
    }//GEN-LAST:event_saveScriptActionPerformed

    private void saveScriptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saveScriptKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            saveScript.doClick();
        }
    }//GEN-LAST:event_saveScriptKeyPressed

    private void cancelbtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelbtnKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            cancelbtn.doClick();
        }
    }//GEN-LAST:event_cancelbtnKeyPressed

    public void retriveTableFromDB(){

        //get table name from database
        thisController.connectiontoDB("getTabName");
        
        //set table name into array
        ArrayList<String> arrList = new ArrayList<String>();
        arrList.addAll(thisController.arrList);
        
        //remove old information from combo box
        list_table_name.removeAllItems();
        
        //set new information to combo box
        list_table_name.addItem("--Please Select One--");
                for(int i = 0; i<arrList.size();i++){
                    
                    if(arrList.get(i).toUpperCase().equals("HISTORY")){
                        
                    }else{
                        list_table_name.addItem(arrList.get(i));
                    }
                }
    }
    
    public void retriveColumnFromDB(){
        
        ArrayList<String> arrList = new ArrayList<String>();
        arrList.addAll(thisController.arrList);
        thisController.connectiontoDB("getColumn");

        show_columnName.removeAllItems(); 
            for(int i=0;i<arrList.size();i++){
                show_columnName.addItem(arrList.get(i));
                
            }     
    }

    private void showScript(){
            if(choice!=2){
                
            scriptText.setText(thisController.createIndex());
             }
            else if(choice ==2){
                
            scriptText.setText(thisController.createUniqueIndex());
            }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EditModeLabel;
    private javax.swing.JButton addColumn;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JCheckBox checkMultipleColumns;
    private javax.swing.JCheckBox checkUnique;
    private javax.swing.JButton createIndex;
    private javax.swing.JButton edit_Script;
    public static javax.swing.JTextField indexName;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JComboBox list_table_name;
    private javax.swing.JButton refresh;
    private javax.swing.JButton saveScript;
    private javax.swing.JTextArea scriptText;
    private javax.swing.JTextArea show_addedColumnBox;
    public static javax.swing.JComboBox show_columnName;
    private javax.swing.JButton show_script;
    // End of variables declaration//GEN-END:variables
}